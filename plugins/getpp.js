const { cmd } = require('../command');

const { getBuffer } = require('../lib/functions');

cmd({

    pattern: "getpp",

    alias: ["pp", "profilepic"],

    use: ".getpp @user",

    desc: "Get someone's profile picture",

    category: "user",

    react: "üñºÔ∏è",

    filename: __filename

},

async (conn, mek, m, { from, sender, reply }) => {

    try {

        let targetUser;

        if (m.quoted) {

            targetUser = m.quoted.sender;

        } else if (m.mentionedJid && m.mentionedJid.length > 0) {

            targetUser = m.mentionedJid[0];

        } else {

            return reply(`üñºÔ∏è ·¥ò ü·¥á·¥Äs·¥á  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥è Ä ·¥ç·¥á…¥·¥õ…™·¥è…¥ ·¥Ä ·¥ús·¥á Ä ·¥õ·¥è …¢·¥á·¥õ ·¥õ ú·¥á…™ Ä ·¥ò Ä·¥è“ì…™ ü·¥á ·¥ò…™·¥Ñ·¥õ·¥ú Ä·¥á.`);

        }

        // R√©cup√®re la photo de profil

        const profilePic = await conn.profilePictureUrl(targetUser, 'image').catch(() => null);

        if (!profilePic) {

            return reply("‚ùå Couldn't fetch profile picture. The user might not have one.");

        }

        const caption = `üí´ ·¥ò Ä·¥è“ì…™ ü·¥á ·¥ò…™·¥Ñ·¥õ·¥ú Ä·¥á ·¥è“ì @${targetUser.split('@')[0]}\n\n> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ö·¥á·¥†  è·¥è·¥Ä…¥…¥*`;

        await conn.sendMessage(from, {

            image: { url: profilePic },

            caption,

            mentions: [targetUser],

            contextInfo: {

                mentionedJid: [targetUser],

                forwardingScore: 999,

                isForwarded: false

            }

        }, { quoted: mek });

    } catch (err) {

        console.error("‚ùå GETPP ERROR:", err);

        reply("‚ùå Error while getting profile picture.");

    }

});
  
