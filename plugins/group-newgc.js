const { cmd } = require('../command');
const config = require('../config');
const prefix = config.PREFIX;

cmd({
  pattern: "newgc",
  category: "group",
  desc: "Create a group with specified members.",
  filename: __filename,
  use: `${prefix}newgc GroupName number1,number2`,
  owner: true,
}, async (conn, mek, m, { body, sender, isOwner, reply }) => {
  try {
    if (!isOwner) return reply("‚ùå ·¥è…¥ ü è ·¥õ ú·¥á  ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.");
    if (!body.includes(" ")) return reply(`Usage: ${prefix}…¥·¥á·¥°…¢·¥Ñ …¢ Ä·¥è·¥ú·¥ò…¥·¥Ä·¥ç·¥á …¥·¥ú·¥ç ô·¥á Ä1,…¥·¥ú·¥ç ô·¥á Ä2`);

    const firstSpaceIndex = body.indexOf(" ");
    const groupName = body.slice(0, firstSpaceIndex).trim();
    const numbersRaw = body.slice(firstSpaceIndex + 1).trim();

    if (!groupName) return reply("‚ùå ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä …¢ Ä·¥è·¥ú·¥ò …¥·¥Ä·¥ç·¥á.");
    if (groupName.length > 30) return reply("‚ùå …¢ Ä·¥è·¥ú·¥ò …¥·¥Ä·¥ç·¥á ·¥õ·¥è·¥è  ü·¥è…¥…¢ (·¥ç·¥Äx 30 ·¥Ñ ú·¥Ä Äs).");

    // Nettoyer les num√©ros, garder uniquement chiffres, min 10 chiffres
    let numberList = numbersRaw.split(",")
      .map(n => n.trim().replace(/\D/g, ''))
      .filter(n => n.length >= 10);

    if (numberList.length === 0) return reply("‚ùå ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä·¥õ  ü·¥á·¥Äs·¥õ ·¥è…¥·¥á ·¥†·¥Ä ü…™·¥Ö ·¥ò ú·¥è…¥·¥á …¥·¥ú·¥ç ô·¥á Ä (·¥Ö…™…¢…™·¥õs ·¥è…¥ ü è).");

    // Inclure le bot lui-m√™me dans le groupe
    const me = sender.split("@")[0] + "@s.whatsapp.net";

    // Pr√©parer participants, maximum 10 au moment de la cr√©ation (limite WhatsApp)
    // On met le bot + au max 9 autres membres
    const participants = [me, ...numberList.slice(0, 9).map(n => n + "@s.whatsapp.net")];

    // Cr√©er le groupe avec le bot + max 9 membres
    const group = await conn.groupCreate(groupName, participants);

    // Ajouter les autres membres (au-del√† de 9) un par un
    const failedAdds = [];
    for (let i = 9; i < numberList.length; i++) {
      const jid = numberList[i] + "@s.whatsapp.net";
      try {
        await conn.groupParticipantsUpdate(group.id, [jid], "add");
      } catch (err) {
        failedAdds.push(numberList[i]);
      }
    }

    await conn.groupUpdateDescription(group.id, `Group created by @${sender.split('@')[0]}`);

    await conn.sendMessage(group.id, {
      text: `üëã *Welcome to ${groupName}!* Group created by @${sender.split('@')[0]}`,
      mentions: [sender]
    });

    let response = `‚ï≠‚îÅ‚îÅ‚îÅ„Äî *‚úÖ ùêÜùêëùêéùêîùêè ùêÇùêëùêÑùêÄùêìùêÑùêÉ ùêíùêîùêÇùêÇùêÑùêíùêíùêÖùêîùêãùêãùêò* „Äï‚îÅ‚îÅ‚¨£
‚îÉüìõ *…¢ Ä·¥è·¥ú·¥ò Œ∑Œ±–º—î:* ${groupName}
‚îÉüë• *–º—î–º–≤—î—è—ï Œ±‚àÇ‚àÇ—î‚àÇ:* ${numberList.length - failedAdds.length}
‚îÉ
‚îÉüìé *ŒπŒ∑ŒΩŒπ—ÇŒ±—ÇŒπœÉŒ∑ ‚ÑìŒπŒ∑–∫:*
‚îÉhttps://chat.whatsapp.com/${await conn.groupInviteCode(group.id)}
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¨£

‚ú® —Ç–Ω—î g—èœÉœÖœÅ is Œ∑œÉœâ —è—îŒ±‚àÇ—É!
üë§ —ÉœÉœÖ Œ±—è—î —Ç–Ω—î ∆íœÉœÖŒ∑‚àÇ—î—è.
üöÄ ŒπŒ∑ŒΩŒπ—Ç—î –ºœÉ—è—î œÅ—îœÉœÅ‚Ñì—î œâŒπ—Ç–Ω —Ç–Ω—î ‚ÑìŒπŒ∑–∫ Œ±–≤œÉŒΩ—î.
`;

    if (failedAdds.length) {
      response += `\n‚ö†Ô∏è Failed to add these numbers:\n${failedAdds.join(", ")}`;
    }

    return reply(response);

  } catch (e) {
    console.error(e);
    return reply(`‚ùå *Erreur lors de la cr√©ation du groupe !*\n\n*D√©tail:* ${e.message}`);
  }
});

                         
