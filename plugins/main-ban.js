const fs = require("fs");
const { cmd } = require("../command");

function getBannedList() {
    const banFile = "./lib/ban.json";
    if (!fs.existsSync(banFile)) fs.writeFileSync(banFile, JSON.stringify([]));
    return JSON.parse(fs.readFileSync(banFile, "utf-8"));
}

function saveBannedList(list) {
    fs.writeFileSync("./lib/ban.json", JSON.stringify([...new Set(list)], null, 2));
}

// ‚õî  ô·¥Ä…¥ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö
cmd({
    pattern: "ban",
    alias: ["blockuser", "addban"],
    desc: " ô·¥Ä…¥ ·¥Ä ·¥ús·¥á Ä “ì Ä·¥è·¥ç ·¥ús…™…¥…¢ ·¥õ ú·¥á  ô·¥è·¥õ",
    category: "owner",
    react: "‚õî",
    filename: __filename
}, async (conn, mek, m, { from, args, isCreator, reply }) => {
    try {
        if (!isCreator) return reply("_‚ùó·¥è…¥ ü è ·¥õ ú·¥á  ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö._");

        let target = m.mentionedJid?.[0]
            || (m.quoted?.sender ?? null)
            || (args[0]?.replace(/[^0-9]/g, '') + "@s.whatsapp.net");

        if (!target || !target.includes("@s.whatsapp.net")) {
            return reply("‚ùå ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ·¥†·¥Ä ü…™·¥Ö …¥·¥ú·¥ç ô·¥á Ä, ·¥õ·¥Ä…¢ ·¥è Ä  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ús·¥á Ä.");
        }

        if (target === m.sender || target === conn.user?.id) {
            return reply("‚ùå  è·¥è·¥ú ·¥Ñ·¥Ä…¥'·¥õ  ô·¥Ä…¥  è·¥è·¥ú Äs·¥á ü“ì ·¥è Ä ·¥õ ú·¥á  ô·¥è·¥õ.");
        }

        let banned = getBannedList();
        if (banned.includes(target)) return reply("‚ùå ·¥õ ú…™s ·¥ús·¥á Ä …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è  ô·¥Ä…¥…¥·¥á·¥Ö.");

        banned.push(target);
        saveBannedList(banned);

        await conn.sendMessage(from, {
            image: { url: "https://files.catbox.moe/mwmtbh.jpg" },
            caption: `‚õî ·¥ús·¥á Ä  ú·¥Äs  ô·¥á·¥á…¥  ô·¥Ä…¥…¥·¥á·¥Ö “ì Ä·¥è·¥ç ·¥ús…™…¥…¢ ·¥õ ú·¥á  ô·¥è·¥õ:\n\n@${target.split("@")[0]}`,
            mentions: [target]
        }, { quoted: mek });

    } catch (err) {
        console.error(err);
        reply("‚ùå ·¥á Ä Ä·¥è Ä: " + err.message);
    }
});

// ‚úÖ ·¥ú…¥ ô·¥Ä…¥
cmd({
    pattern: "unban",
    alias: ["removeban"],
    desc: "·¥ú…¥ ô·¥Ä…¥ ·¥Ä ·¥ús·¥á Ä",
    category: "owner",
    react: "‚úÖ",
    filename: __filename
}, async (conn, mek, m, { from, args, isCreator, reply }) => {
    try {
        if (!isCreator) return reply("_‚ùó·¥è…¥ ü è ·¥õ ú·¥á  ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö._");

        let target = m.mentionedJid?.[0]
            || (m.quoted?.sender ?? null)
            || (args[0]?.replace(/[^0-9]/g, '') + "@s.whatsapp.net");

        if (!target || !target.includes("@s.whatsapp.net")) {
            return reply("‚ùå ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ·¥†·¥Ä ü…™·¥Ö …¥·¥ú·¥ç ô·¥á Ä, ·¥õ·¥Ä…¢ ·¥è Ä  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ús·¥á Ä.");
        }

        let banned = getBannedList();
        if (!banned.includes(target)) return reply("‚ùå ·¥õ ú…™s ·¥ús·¥á Ä …™s …¥·¥è·¥õ  ô·¥Ä…¥…¥·¥á·¥Ö.");

        banned = banned.filter(u => u !== target);
        saveBannedList(banned);

        await conn.sendMessage(from, {
            image: { url: "https://files.catbox.moe/mwmtbh.jpg" },
            caption: `‚úÖ ·¥ús·¥á Ä  ú·¥Äs  ô·¥á·¥á…¥ ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö:\n\n@${target.split("@")[0]}`,
            mentions: [target]
        }, { quoted: mek });

    } catch (err) {
        console.error(err);
        reply("‚ùå ·¥á Ä Ä·¥è Ä: " + err.message);
    }
});

// üìã  ü…™s·¥õ ·¥è“ì  ô·¥Ä…¥…¥·¥á·¥Ö ·¥ús·¥á Äs
cmd({
    pattern: "listban",
    alias: ["banlist", "bannedusers"],
    desc: " ü…™s·¥õ ·¥Ä ü ü  ô·¥Ä…¥…¥·¥á·¥Ö ·¥ús·¥á Äs",
    category: "owner",
    react: "üìã",
    filename: __filename
}, async (conn, mek, m, { from, isCreator, reply }) => {
    try {
        if (!isCreator) return reply("_‚ùó·¥è…¥ ü è ·¥õ ú·¥á  ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö._");

        let banned = getBannedList();
        if (banned.length === 0) return reply("‚úÖ …¥·¥è  ô·¥Ä…¥…¥·¥á·¥Ö ·¥ús·¥á Äs “ì·¥è·¥ú…¥·¥Ö.");

        let msg = `‚õî * ô·¥Ä…¥…¥·¥á·¥Ö ·¥ús·¥á Äs  ü…™s·¥õ:*\n\n`;

        for (let i = 0; i < banned.length; i++) {
            let name = conn.getName ? await conn.getName(banned[i]) : banned[i];
            msg += `${i + 1}. ${name} (${banned[i].replace("@s.whatsapp.net", "")})\n`;
        }

        await conn.sendMessage(from, {
            image: { url: "https://files.catbox.moe/mwmtbh.jpg" },
            caption: msg
        }, { quoted: mek });

    } catch (err) {
        console.error(err);
        reply("‚ùå ·¥á Ä Ä·¥è Ä: " + err.message);
    }
});
          
